package com.jrdm.mongodb.model;

import java.util.Arrays;

import com.google.gson.annotations.SerializedName;

public class DummyExploit {

	    @SerializedName("_id")
	    private String id;
	    private String description;
	    private String source;

	    private String[] bid;
	    private String[] cve;
	    private String[] msb;
	    private String[] osvdb;

	    // Optional properties
	    private boolean privileged;

	    private int port;

	    private String code;
	    private String type;
	    private String version;
	    private String author;

	    private String[] platform;

	    public DummyExploit() {

	    }

	    /**
	     * @return Unique ID for the exploit/ vulnerability.
	     */
	    public String getId() {
	        return id;
	    }

	    public void setId(String id) {
	        this.id = id;
	    }

	    /**
	     * @return A description explaining the details of the exploit.
	     */
	    public String getDescription() {
	        return description;
	    }

	    public void setDescription(String description) {
	        this.description = description;
	    }

	    /**
	     * @return The name of the data source. Possible values are: cve, exploitdb, metasploit
	     */
	    public String getSource() {
	        return source;
	    }

	    public void setSource(String source) {
	        this.source = source;
	    }

	    /**
	     * @return An array of Bugtraq IDs that reference this vulnerability.
	     */
	    public String[] getBid() {
	        return bid;
	    }

	    public void setBid(String[] bid) {
	        this.bid = bid;
	    }

	    /**
	     * @return An array of relevant CVE IDs that reference this exploit.
	     */
	    public String[] getCve() {
	        return cve;
	    }

	    public void setCve(String[] cve) {
	        this.cve = cve;
	    }

	    /**
	     * @return An array of Microsoft Security Bulletin reference IDs for this exploit.
	     */
	    public String[] getMsb() {
	        return msb;
	    }

	    public void setMsb(String[] msb) {
	        this.msb = msb;
	    }

	    /**
	     * @return An array of OSVDB IDs that are relevant to this exploit.
	     */
	    public String[] getOsvdb() {
	        return osvdb;
	    }

	    public void setOsvdb(String[] osvdb) {
	        this.osvdb = osvdb;
	    }

	    /**
	     * @return The port number for the affected service.
	     */
	    public int getPort() {
	        return port;
	    }

	    public void setPort(int port) {
	        this.port = port;
	    }

	    /**
	     * @return The author of the exploit/ vulnerability.
	     */
	    public String getAuthor() {
	        return author;
	    }

	    public void setAuthor(String author) {
	        this.author = author;
	    }

	    /**
	     * @return The actual code for the exploit.
	     */
	    public String getCode() {
	        return code;
	    }

	    public void setCode(String code) {
	        this.code = code;
	    }

	    /**
	     * @return The type of exploit, possible values are: dos, exploit, local, remote, shellcode,
	     * webapps
	     */
	    public String getType() {
	        return type;
	    }

	    public void setType(String type) {
	        this.type = type;
	    }

	    /**
	     * @return An array of platforms that the exploit targets. Possible values are: aix, cgi, freebsd,
	     * hardware, java, jsp, lin_x86, linux, multiple, novell, osx, php, true64, unix, windows
	     */
	    public String[] getPlatform() {
	        return platform;
	    }

	    public void setPlatform(String[] platform) {
	        this.platform = platform;
	    }

	    /**
	     * @return true if privileged exploit false if not
	     */
	    public boolean isPrivileged() {
	        return privileged;
	    }

	    public void setPrivileged(boolean privileged) {
	        this.privileged = privileged;
	    }

	    /**
	     * @return Version of the exploit
	     */
	    public String getVersion() {
	        return version;
	    }

	    public void setVersion(String version) {
	        this.version = version;
	    }


	    @Override
	    public String toString() {
	        return "DummyExploit{" +
	                "id='" + id + '\'' +
	                ", description='" + description + '\'' +
	                ", source='" + source + '\'' +
	                ", bid=" + Arrays.toString(bid) +
	                ", cve=" + Arrays.toString(cve) +
	                ", msb=" + Arrays.toString(msb) +
	                ", osvdb=" + Arrays.toString(osvdb) +
	                ", privileged=" + privileged +
	                ", port=" + port +
	                ", code='" + code + '\'' +
	                ", type='" + type + '\'' +
	                ", version='" + version + '\'' +
	                ", author='" + author + '\'' +
	                ", platform=" + Arrays.toString(platform) +
	                '}';
	    }
	
}
